const { SlashCommandBuilder, EmbedBuilder } = require('discord.js');

module.exports = {
    data: new SlashCommandBuilder()
        .setName('chistes')
        .setDescription('ðŸ˜‚ RÃ­ete'),
    async execute(interaction, client) {

        const dados = [
            "Â¿CÃ³mo se dice paÃ±uelo en japonÃ©s? Saka-moko.",
            "Â¿CÃ³mo se dice disparo en Ã¡rabe? AhÃ­-va-la-bala.",
            "Â¿QuÃ© le dice un gusano a otro gusano? Voy a dar una vuelta a la manzana.",
            "Si se muere una pulga, Â¿a dÃ³nde va? Al pulgatorio.",
            "Â¿CÃ³mo se llama el primo de Bruce Lee? Broco Lee.",
            "SÃ­ los zombies se deshacen con el paso del tiempo Â¿zombiodegradables?",
            "Â¿CÃ³mo se queda un mago despuÃ©s de comer? Magordito.",
            "Esto es un hombre que entra en un bar de pinchos y... ay, ay, ay, ay.",
            "â€”A mÃ­ me gustarÃ­a vivir en una isla desierta.\n â€”A mÃ­ tambiÃ©n.\nâ€”Â¡Joder! Â¡Ya empezamos a llenarla!",
            "Â¿De dÃ³nde vienen los hÃ¡mster? De Hamsterdam.",
            "Una familia ocupÃ³ un terreno en Hawaii. Ahora a ver quiÃ©n la desaloha.",
            "Â¿Por quÃ© no se puede discutir con un DJ? Porque siempre cambia de tema.",
            "â€”Â¡Me acaba de picar una serpiente!\nâ€”Â¿Cobra?\nâ€”No, gratis.",
            "â€”Si yo digo fui rica, es tiempo pasado, pero si digo soy hermosa, Â¿quÃ© es?\nâ€”Exceso de imaginaciÃ³n.",
            "â€”Â¿Por quÃ© Bob Esponja no va al gimnasio?\nâ€”Porque ya estÃ¡ cuadrado.",
        ];

        const dadosR = dados[Math.floor(Math.random() * dados.length)];

        const embed = new EmbedBuilder()
            .setAuthor({ name: `${interaction.user.username} pidiÃ³ un chiste`, iconURL: interaction.user.avatarURL({ dynamic: true }) })
            .addFields(
                { name: 'ðŸ˜‚ - Chiste:', value: `\`\`\`${dadosR}\`\`\`` },
            )
            .setColor('Random')
            .setFooter({ text: `${interaction.guild.name}`, iconURL: client.user.avatarURL({ dynamic: true }) })
            .setTimestamp()

        await interaction.reply({ embeds: [embed] })
    }
}